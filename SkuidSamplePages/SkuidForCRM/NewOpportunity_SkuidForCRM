<skuidpage showsidebar="false" showheader="true" tabtooverride="Opportunity">
   <resources>
      <labels/>
      <javascript>
         <jsitem location="staticresource" name="OpportunityJS" cachelocation="false" url="" namespace="skuidcrm">var params = arguments[0],
   $ = skuid.$;
</jsitem>
         <jsitem location="inlinecomponent" name="HideLineItemsTableIfNoPricebook" cachelocation="false" url="">var $ = skuid.$,
    OppModel = skuid.model.getModel('Opportunity'),
    PricebookEntriesModel = skuid.model.getModel('PricebookEntries'),
    LineItemsModel = skuid.model.getModel('LineItems'),
    Opp = OppModel ? OppModel.getFirstRow() : null;

if (Opp) {
    
    var onPricebookChange = function(){

        var LineItemsTable = $('#LineItemsTable');

        // 1. If we have a value, show our LineItemsTable, 
        //      and Update our PricebookEntries model
        // 2. Otherwise hide the Table.
        var PricebookId = OppModel.getFieldValue(Opp,'Pricebook2Id',true);
        if (PricebookId) {

            LineItemsTable.show();
            PricebookEntriesModel.setCondition(
                PricebookEntriesModel.getConditionByName('Pricebook2Id'),
                PricebookId
            );

            PricebookEntriesModel.updateData(function(){

               if (LineItemsModel) {
                    // If we are dealing with a NEW Opportunity,
                    // create a default Line Item
                    if (skuid.model.isNewId(Opp.Id) &amp;&amp; !LineItemsModel.data.length){
                        LineItemsModel.createRow();
                    } else if (LineItemsModel.data.length) {

                        // If we have entries in our LineItems model already,
                        // remove the selected PricebookEntries from them,
                        // as they will be invalid.
                        $.each(LineItemsModel.data,function(i,lineItem){
                            if (lineItem.PricebookEntryId) {

                                var currProductId = lineItem.PricebookEntry.Product2Id,
                                    foundMatchingProduct = false;

                                // Try to find a matching Product record in our PricebookEntriesModel
                                $.each(PricebookEntriesModel.data,function(){
                                    if (this.Product2Id === currProductId) {

                                        LineItemsModel.updateRow(lineItem,{
                                            'PricebookEntryId':this.Id,
                                            'PricebookEntry':this
                                        });
                                        foundMatchingProduct = true;
                                        return false;
                                    }
                                });
                                // If we did NOT find a matching product,
                                // get rid of the current PricebookEntry for our LineItem
                                if (!foundMatchingProduct) {
                                    LineItemsModel.updateRow(lineItem,{
                                        'PricebookEntryId':null,
                                        'PricebookEntry':null
                                    });
                                }
                            }
                        });
                        
                    }
                }

                LineItemsTable.data('object').list.render({
                    refreshFields:true,
                    resetPagination:false
                });
            });
        } else {
            LineItemsTable.hide();
        }

            



    };
    
    // Register a listener on the PricebookId field
    // so that when it changes,
    // we rerun our logic
    var listener = new skuid.ui.Field(Opp,OppModel,null,{
        fieldId: 'Pricebook2Id',
        register: true
    });
    listener.handleChange = function(){
        onPricebookChange();
    };

    // Run the logic initially
    setTimeout(function(){

        // If we do not have a Pricebook selected yet,
        // check to see if there is only one Pricebook available.
        // If there's only one Pricebook,
        // then pick it.
        // Otherwise, we will expect our users to choose the Pricebook.
        var Pricebooks = skuid.model.getModel('Pricebooks');
        if ((!Opp.Pricebook2Id) &amp;&amp; Pricebooks &amp;&amp; Pricebooks.data &amp;&amp; (Pricebooks.data.length===1)) {
            OppModel.updateRow(Opp,{
                'Pricebook2Id': Pricebooks.data[0].Id,
                'Pricebook2': Pricebooks.data[0]
            });
            var fe = $('#SelectPricebook');
            if (fe) {
                var list = fe.data('object').list;
                list &amp;&amp; list.render();
            }
        } else {
            onPricebookChange();
        }
    },200);

}</jsitem>
      </javascript>
      <css/>
   </resources>
   <models>
      <model id="OwnerPrefill" limit="1" query="true" createrowifnonefound="false" sobject="User">
         <fields>
            <field id="Name"/>
            <field id="Id"/>
         </fields>
         <conditions>
            <condition type="userinfo" value="" field="Id" operator="=" enclosevalueinquotes="true" userinfotype="userid"/>
         </conditions>
      </model>
      <model id="Account" limit="1" query="true" createrowifnonefound="false" orderby="" sobject="Account">
         <fields>
            <field id="Name"/>
            <field id="Id"/>
         </fields>
         <conditions>
            <condition type="param" value="accid" state="filterableoff" field="Id" operator="=" enclosevalueinquotes="true"/>
         </conditions>
      </model>
      <model id="Campaign" limit="1" query="true" createrowifnonefound="false" orderby="" sobject="Campaign">
         <fields>
            <field id="Name"/>
            <field id="Id"/>
         </fields>
         <conditions>
            <condition type="param" value="CampaignId" field="Id" operator="=" enclosevalueinquotes="true"/>
         </conditions>
      </model>
      <model id="Opportunity" limit="1" query="false" createrowifnonefound="true" orderby="LastModifiedDate DESC" sobject="Opportunity">
         <fields>
            <field id="Type"/>
            <field id="OwnerId"/>
            <field id="Owner.Name"/>
            <field id="IsPrivate"/>
            <field id="Name"/>
            <field id="Account.Name"/>
            <field id="LeadSource"/>
            <field id="CloseDate"/>
            <field id="NextStep"/>
            <field id="StageName"/>
            <field id="Description"/>
            <field id="AccountId"/>
            <field id="CampaignId"/>
            <field id="Campaign.Name"/>
            <field id="Id"/>
            <field id="Pricebook2Id"/>
            <field id="Pricebook2.Name"/>
         </fields>
         <conditions>
            <condition type="modelmerge" value="" field="CampaignId" operator="=" model="Campaign" enclosevalueinquotes="true" mergefield="Id"/>
            <condition type="modelmerge" value="" field="AccountId" operator="=" model="Account" enclosevalueinquotes="true" mergefield="Id" novaluebehavior="deactivate"/>
            <condition type="modelmerge" value="" field="OwnerId" operator="=" model="OwnerPrefill" enclosevalueinquotes="true" mergefield="Id"/>
         </conditions>
      </model>
      <model id="Pricebooks" limit="50" query="true" createrowifnonefound="false" sobject="Pricebook2" orderby="Name">
         <fields>
            <field id="IsStandard"/>
            <field id="Name"/>
         </fields>
         <conditions>
            <condition type="fieldvalue" value="true" enclosevalueinquotes="false" field="IsActive"/>
         </conditions>
      </model>
      <model id="PricebookEntries" limit="100" query="true" createrowifnonefound="false" orderby="Product2.Name" sobject="PricebookEntry">
         <fields>
            <field id="Id"/>
            <field id="UnitPrice"/>
            <field id="Product2Id"/>
            <field id="Product2.Name"/>
            <field id="Product2.Id"/>
         </fields>
         <conditions>
            <condition type="fieldvalue" value="true" enclosevalueinquotes="false" field="IsActive"/>
            <condition type="fieldvalue" value="" enclosevalueinquotes="true" field="Pricebook2Id" state="filterableoff" inactive="true" name="Pricebook2Id"/>
         </conditions>
      </model>
      <model id="LineItems" limit="" query="false" createrowifnonefound="false" sobject="OpportunityLineItem">
         <fields>
            <field id="SortOrder"/>
            <field id="UnitPrice"/>
            <field id="Subtotal"/>
            <field id="TotalPrice"/>
            <field id="Quantity"/>
            <field id="Description"/>
            <field id="ListPrice"/>
            <field id="ServiceDate"/>
            <field id="PricebookEntry.Product2Id"/>
            <field id="PricebookEntry.Product2.Name"/>
            <field id="PricebookEntryId"/>
            <field id="PricebookEntry.UnitPrice"/>
            <field id="Discount"/>
         </fields>
         <conditions>
            <condition type="modelmerge" enclosevalueinquotes="true" operator="=" mergefield="Id" field="OpportunityId" model="Opportunity"/>
            <condition type="fieldvalue" value="TODAY" enclosevalueinquotes="false" field="ServiceDate"/>
            <condition type="fieldvalue" value="1" enclosevalueinquotes="false" field="Quantity"/>
         </conditions>
      </model>
   </models>
   <components>
      <pagetitle model="Opportunity">
         <maintitle>New {{Model.Label}}</maintitle>
         <actions>
            <action type="savecancel" label="New Action" afterSave="/{{Id}}" afterCancel="{{#$Param.retURL}}{{$Param.retURL}}{{/$Param.retURL}}{{^$Param.retURL}}/{{Model.KeyPrefix}}/o{{/$Param.retURL}}" window="self" saveLabel="">
               <models>
                  <model>LineItems</model>
               </models>
            </action>
         </actions>
         <subtitle>{{#AccountId}}{{Account.Name}}{{/AccountId}}</subtitle>
      </pagetitle>
      <basicfieldeditor showsavecancel="false" showheader="true" model="Opportunity" mode="edit">
         <columns>
            <column width="50%">
               <sections>
                  <section title="Basic Information">
                     <fields>
                        <field id="Name"/>
                        <field id="AccountId" required="true">
                           <label>Account</label>
                           <filters/>
                        </field>
                        <field id="Type">
                           <label>Type</label>
                        </field>
                        <field id="Description"/>
                     </fields>
                  </section>
               </sections>
            </column>
            <column width="25%">
               <sections>
                  <section title="Sales Process">
                     <fields>
                        <field id="StageName"/>
                        <field id="CloseDate"/>
                        <field id="NextStep"/>
                     </fields>
                  </section>
               </sections>
            </column>
            <column width="25%">
               <sections>
                  <section title="System Information">
                     <fields>
                        <field id="IsPrivate"/>
                        <field id="LeadSource"/>
                        <field id="CampaignId">
                           <label>Source Campaign</label>
                        </field>
                        <field id="OwnerId"/>
                     </fields>
                  </section>
               </sections>
            </column>
         </columns>
      </basicfieldeditor>
      <basicfieldeditor showheader="true" showsavecancel="false" model="Opportunity" mode="edit" uniqueid="SelectPricebook">
         <columns>
            <column width="50%">
               <sections>
                  <section title="Select Pricebook">
                     <fields>
                        <field id="Pricebook2Id" required="false" type="REFPICK" optionsource="model" optionmodel="Pricebooks" displaytemplate="{{Name}}">
                           <filters/>
                        </field>
                     </fields>
                  </section>
               </sections>
            </column>
         </columns>
      </basicfieldeditor>
      <template model="OwnerPrefill" multiple="true" allowhtml="true">
         <contents>&lt;div class="nx-editor-header-title"&gt;Line Items&lt;/div&gt;</contents>
      </template>
      <skootable showconditions="true" showsavecancel="false" searchbox="false" searchmethod="server" showexportbuttons="false" pagesize="10" createrecords="true" model="LineItems" mode="edit" uniqueid="LineItemsTable">
         <fields>
            <field id="PricebookEntryId" type="CUSTOM" optionsource="model" optionmodel="PricebookEntries" displaytemplate="{{Product2.Name}} (List: {{UnitPrice}})" snippet="pricebookEntryRenderer" required="true">
               <label>Product</label>
               <filters/>
            </field>
            <field id="ServiceDate" required="true"/>
            <field id="Quantity" type="CUSTOM" snippet="quantityRenderer" allowordering="false"/>
            <field id="UnitPrice" required="true"/>
            <field id="Description"/>
            <field id="TotalPrice" readonly="true" type="CUSTOM" snippet="totalPriceRenderer" allowordering="false">
               <summaries>
                  <summary>sum</summary>
               </summaries>
            </field>
         </fields>
         <rowactions>
            <action type="edit"/>
            <action type="delete"/>
            <action type="custom" snippet="cloneRecord" label="Clone Product" icon="ui-silk-arrow-divide"/>
         </rowactions>
         <massactions usefirstitemasdefault="true">
            <action type="massupdate"/>
            <action type="massedit"/>
            <action type="massdelete"/>
         </massactions>
         <views>
            <view type="standard"/>
         </views>
         <actions defaultlabel="Global Actions" defaulticon="ui-silk-wand" usefirstitemasdefault="true">
            <!--<action type="redirect" label="Choose Pricebook" url="/oppitm/choosepricebook.jsp?id={{$Param.id}}&amp;retURL=%2F{{$Param.id}}&amp;sUrl=%2F{{$Param.id}}" icon="ui-silk-book-edit"/>-->
            <!--<action type="redirect" label="Add Product" url="/p/opp/SelectSearch?addTo={{$Param.id}}&amp;retURL=%2F{{$Param.id}}" icon="ui-silk-cart-put"/>-->
         </actions>
      </skootable>
      <custom name="HideLineItemsTableIfNoPricebook"/>
   </components>
</skuidpage>
